{"version":3,"file":"Helper.js","sourceRoot":"","sources":["../../src/classes/Helper.ts"],"names":[],"mappings":"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","sourcesContent":["import { KillPlayer, KillPlayerType } from \"../types\";\n\nconst killData = [\n  { id: \"thirst\", name: \"Thirst\", type: KillPlayerType.Natural },\n  { id: \"hunger\", name: \"Hunger\", type: KillPlayerType.Natural },\n  { id: \"cold\", name: \"Cold\", type: KillPlayerType.Natural },\n  { id: \"bleeding\", name: \"Bleeding\", type: KillPlayerType.Natural },\n  { id: \"fall\", name: \"Fall\", type: KillPlayerType.Natural },\n  { id: \"drowned\", name: \"Drowned\", type: KillPlayerType.Natural },\n  { id: \"radiation\", name: \"Radiation\", type: KillPlayerType.Natural },\n  { id: \"pee pee 9000\", name: \"Pee Pee 9000\", type: KillPlayerType.Natural },\n\n  { id: \"bear\", name: \"Bear\", type: KillPlayerType.Npc },\n  { id: \"boar\", name: \"Boar\", type: KillPlayerType.Npc },\n  { id: \"wolf\", name: \"Wolf\", type: KillPlayerType.Npc },\n  { id: \"patrolhelicopter\", name: \"Patrol Helicopter\", type: KillPlayerType.Npc },\n  { id: \"bradleyapc\", name: \"Bradley APC\", type: KillPlayerType.Npc },\n\n  { id: \"guntrap.deployed\", name: \"Shotgun Trap\", type: KillPlayerType.Entity },\n  { id: \"autoturret_deployed\", name: \"Auto Turret\", type: KillPlayerType.Entity },\n  { id: \"flameturret.deployed\", name: \"Flame Turret\", type: KillPlayerType.Entity },\n  { id: \"teslacoil.deployed\", name: \"Tesla Coil\", type: KillPlayerType.Entity },\n  { id: \"campfire\", name: \"Campfire\", type: KillPlayerType.Entity },\n  { id: \"barricade.wood\", name: \"Wooden Barricade\", type: KillPlayerType.Entity },\n  { id: \"barricade.metal\", name: \"Metal Barricade\", type: KillPlayerType.Entity },\n  { id: \"barricade.woodwire\", name: \"Wooden Barricade\", type: KillPlayerType.Entity },\n  { id: \"spikes.floor\", name: \"Floor Spikes\", type: KillPlayerType.Entity },\n  { id: \"wall.external.high.stone\", name: \"High External Stone Wall\", type: KillPlayerType.Entity },\n  { id: \"wall.external.high\", name: \"High External Wooden Wall\", type: KillPlayerType.Entity },\n  { id: \"gates.external.high.wood\", name: \"High External Wooden Gate\", type: KillPlayerType.Entity },\n  { id: \"gates.external.high.stone\", name: \"High External Stone Gate\", type: KillPlayerType.Entity },\n  { id: \"sentry.bandit.static\", name: \"Bandit Sentry\", type: KillPlayerType.Entity },\n  { id: \"sentry.scientist.static\", name: \"Scientist Sentry\", type: KillPlayerType.Entity },\n  { id: \"landmine\", name: \"Landmine\", type: KillPlayerType.Entity },\n  { id: \"rocket_crane_lift_trigger\", name: \"Crane Lift\", type: KillPlayerType.Entity },\n  { id: \"cactus\", name: \"Cactus\", type: KillPlayerType.Entity },\n  { id: \"rowboat\", name: \"Rowboat\", type: KillPlayerType.Entity },\n  { id: \"fireball\", name: \"Fireball\", type: KillPlayerType.Entity },\n  { id: \"oilfireballsmall\", name: \"Small Oil Fire\", type: KillPlayerType.Entity },\n  { id: \"napalm\", name: \"Napalm\", type: KillPlayerType.Entity },\n  { id: \"cargoshipdynamic1\", name: \"Cargo Ship\", type: KillPlayerType.Entity },\n  { id: \"beartrap\", name: \"Bear Trap\", type: KillPlayerType.Entity },\n] as const;\n\nexport type killData =\n  | (typeof killData)[number]\n  | { id: number; name: \"Scientist\"; type: KillPlayerType.Npc }\n  | { id: string; name: string; type: KillPlayerType.Player };\n\nexport default class Helper {\n  public static getKillInformation(ign: string | undefined): KillPlayer {\n    if (!ign || typeof ign !== \"string\") {\n      return {\n        id: \"unknown\",\n        type: KillPlayerType.Player,\n        name: \"Unknown\",\n      };\n    }\n\n    const lowerCaseIgn = ign.toLowerCase();\n    const data = killData.find((e) => e.id === lowerCaseIgn);\n\n    if (data) {\n      return {\n        id: ign,\n        type: data.type,\n        name: data.name,\n      };\n    }\n\n    if (!isNaN(Number(ign))) {\n      return {\n        id: ign,\n        type: KillPlayerType.Npc,\n        name: \"Scientist\",\n      };\n    }\n\n    return {\n      id: ign,\n      type: KillPlayerType.Player,\n      name: ign,\n    };\n  }\n\n  public static areIdsUnique(): boolean {\n    const ids = killData.map((entry) => entry.id);\n    return new Set(ids).size === ids.length;\n  }\n}\n"]}